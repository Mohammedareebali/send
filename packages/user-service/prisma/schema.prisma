generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DRIVER
  PA
  GUARDIAN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
  BLOCKED
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  role      UserRole
  status    UserStatus @default(PENDING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  driver   Driver?
  pa       Pa?
  guardian Guardian?

  @@map("users")
}

model Driver {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  licenseNo    String
  licenseExp   DateTime
  phoneNumber  String
  address      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("drivers")
}

model Pa {
  id            String   @id @default(uuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  certification String?
  phoneNumber   String
  address       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("pas")
}

model Guardian {
  id          String   @id @default(uuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  phoneNumber String
  address     String
  children    Child[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("guardians")
}

model Child {
  id         String   @id @default(uuid())
  guardianId String
  guardian   Guardian @relation(fields: [guardianId], references: [id])
  name       String
  age        Int
  school     String
  grade      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("children")
} 